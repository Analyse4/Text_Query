!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
QueryResult	query_result.cpp	/^QueryResult::QueryResult(string s, shared_ptr<set<line_no>> p, shared_ptr<vector<string>> f):$/;"	f	class:QueryResult
QueryResult	query_result.h	/^class QueryResult$/;"	c
TextQuery	text_query.cpp	/^TextQuery::TextQuery(ifstream &is):file(new vector<string>)$/;"	f	class:TextQuery
TextQuery	text_query.h	/^class TextQuery$/;"	c
_PRINTT_H_	printt.h	2;"	d
_QUERY_RESULT_H_	query_result.h	2;"	d
_RUNQUERIES_H_	runQueries.h	2;"	d
_TEXT_QUERY_H_	text_query.h	2;"	d
file	query_result.h	/^		shared_ptr<vector<string>> file;$/;"	m	class:QueryResult
file	text_query.h	/^		std::shared_ptr<std::vector<std::string>> file;     \/\/智能指针指向一个vector<string>容器，容器中每个元素存储输入文件中的每一行$/;"	m	class:TextQuery
lines	query_result.h	/^		shared_ptr<set<line_no>> lines;$/;"	m	class:QueryResult
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f
print	printt.cpp	/^ostream& print(ostream& os, const QueryResult& qr)$/;"	f
query	text_query.cpp	/^QueryResult TextQuery::query(const string& sought) const$/;"	f	class:TextQuery
runQueries	runQueries.cpp	/^void runQueries(ifstream &infile)$/;"	f
sought	query_result.h	/^		string sought;$/;"	m	class:QueryResult
wm	text_query.h	/^		std::map<std::string, std::shared_ptr<std::set<line_no>>> wm;   \/\/map容器以每个搜索词为关键字寻找相应的一个set容器，该set容器存储该搜索词在输入文件出现的行号$/;"	m	class:TextQuery
